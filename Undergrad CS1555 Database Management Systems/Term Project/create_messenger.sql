START TRANSACTION;

DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS CONTACT_LIST CASCADE;
DROP TABLE IF EXISTS GROUP_CHAT CASCADE;
DROP TABLE IF EXISTS GROUP_CHAT_MEMBERSHIP CASCADE;
DROP TABLE IF EXISTS MESSAGE CASCADE;
DROP TABLE IF EXISTS UNREAD_MESSAGES CASCADE;


CREATE TABLE USERS (
  UserID          INT NOT NULL,
  Username        VARCHAR(10) NOT NULL,
  FName           VARCHAR(15) NOT NULL,
  Minit           CHAR,
  Lname           VARCHAR(15) NOT NULL,
  Email           VARCHAR(15) NOT NULL,
  PRIMARY KEY (UserID)
);

CREATE TABLE CONTACT_LIST (
  UserID        INT NOT NULL,
  ContactID     INT NOT NULL,
  PRIMARY KEY (UserID, ContactID),
  FOREIGN KEY (UserID) REFERENCES USERS(UserID),
  FOREIGN KEY (ContactID) REFERENCES USERS(UserID)
);

CREATE TABLE GROUP_CHAT (
  ID              INT NOT NULL,
  GroupName       VARCHAR(20) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE GROUP_CHAT_MEMBERSHIP (
  GroupID         INT NOT NULL,
  UserID          INT NOT NULL,
  PRIMARY KEY (GroupID, UserID),
  FOREIGN KEY (GroupID) REFERENCES GROUP_CHAT(ID),
  FOREIGN KEY (UserID) REFERENCES USERS(UserID)
);

CREATE TABLE MESSAGE (
  ID              INT NOT NULL,
  Text            VARCHAR(100) NOT NULL,
  Date            DATE NOT NULL,
  SenderID        INT,
  GroupID         INT,
  RecipientID     INT,
  PRIMARY KEY (ID),
  check ((GroupID IS NOT NULL AND RecipientID is NULL) OR (RecipientID IS NOT NULL AND GroupID is NULL) OR (RecipientID IS NULL AND GroupID is NULL)),
  FOREIGN KEY (SenderID) REFERENCES USERS(UserID),
  FOREIGN KEY (GroupID) REFERENCES GROUP_CHAT(ID),
  FOREIGN KEY (RecipientID) REFERENCES USERS(UserID)
);

CREATE TABLE UNREAD_MESSAGES (
    UserID         INT NOT NULL,
    MessageID      INT NOT NULL,
    PRIMARY KEY (UserID, MessageID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (MessageID) REFERENCES Message(ID)
);

COMMIT;
