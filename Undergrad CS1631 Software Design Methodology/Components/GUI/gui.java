import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.JFrame;
import java.io.*;
import java.util.*;

public class gui extends JFrame {
  private JTextField item1, item2, item3, item4, item5;
  private JLabel label1, label2, label3, label4, label5;
  private JTextArea textArea;
  private ArrayList<String> voteLines;

  public gui() {
    super("The title");
    setLayout(new GridLayout(4,0));

    ////////////////////////////////////////////////////////////////////////
    // CREATE NEW VOTE XML ---- CREATE NEW VOTE XML ---- CREATE NEW VOTE XML
    ////////////////////////////////////////////////////////////////////////
    JPanel newPanel1 = new JPanel(new FlowLayout());

    label1 = new JLabel("Email:");
    label1.setHorizontalTextPosition(JLabel.LEFT);
    newPanel1.add(label1);

    item1 = new JTextField("you@example.com", 20);
    newPanel1.add(item1);

    label2 = new JLabel("Vote:");
    label2.setHorizontalTextPosition(JLabel.LEFT);
    newPanel1.add(label2);

    item2 = new JTextField("vote", 20);
    newPanel1.add(item2);

    label3 = new JLabel("File:");
    label3.setHorizontalTextPosition(JLabel.LEFT);
    newPanel1.add(label3);

    item3 = new JTextField("file.xml", 20);
    newPanel1.add(item3);

    newPanel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Create New Vote XML"));

    add(newPanel1);
    pack();

    /////////////////////////////////////////////////////////////////////////////////
    // CREATE NEW TEST SCRIPT ---- CREATE NEW TEST SCRIPT ---- CREATE NEW TEST SCRIPT
    /////////////////////////////////////////////////////////////////////////////////
    JPanel newPanel2 = new JPanel(new FlowLayout());

    label4 = new JLabel("Files (separated by ','):");
    label4.setHorizontalTextPosition(JLabel.LEFT);
    newPanel2.add(label4);

    item4 = new JTextField("file1.xml, file2.xml, ...", 50);
    newPanel2.add(item4);

    newPanel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Create New Test Script"));

    add(newPanel2);
    pack();

    ///////////////////////////////////////////////////////////
    // RUN TEST SCRIPT ---- RUN TEST SCRIPT ----RUN TEST SCRIPT
    ///////////////////////////////////////////////////////////
    JPanel newPanel3 = new JPanel(new FlowLayout());

    label5 = new JLabel("Script:");
    label5.setHorizontalTextPosition(JLabel.LEFT);
    newPanel3.add(label5);

    item5 = new JTextField("script.test", 20);
    newPanel3.add(item5);

    newPanel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Run Test Script"));

    add(newPanel3);
    pack();

    // CONSOLE
    JPanel newPanel4 = new JPanel(new FlowLayout());

    textArea = new JTextArea(5, 20);
    JScrollPane scrollPane = new JScrollPane(textArea);
    textArea.setEditable(false);
    newPanel4.add(textArea);

    newPanel4.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Console"));

    add(newPanel4);
    pack();


    thehandler handler = new thehandler();
    item1.addActionListener(handler);
    item2.addActionListener(handler);
    item3.addActionListener(handler);
  }

  public void createVote(String email, String vote, String file) throws IOException {
    PrintWriter pw = new PrintWriter(file, "UTF-8");

    pw.println("<?xml version=\"1.0\" standalone=\"yes\"?>");
    pw.println("<!--Generated by guiComp.java -->");
    pw.println("<Msg>");
    pw.println("  <Item>");
    pw.println("    <Key>Scope</Key>");
    pw.println("    <Value>SIS.Scope1</Value>");
    pw.println("  </Item>");
    pw.println("  <Item>");
    pw.println("    <Key>MessageType</Key>");
    pw.println("    <Value>Setting</Value>");
    pw.println("  </Item>");
    pw.println("  <Item>");
    pw.println("    <Key>Purpose</Key>");
    pw.println("    <Value>Vote</Value>");
    pw.println("  </Item>");
    pw.println("  <Item>");
    pw.println("    <Key>Reveiver</Key>");
    pw.println("    <Value>VotingApp</Value>");
    pw.println("  </Item>");
    pw.println("  <Item>");
    pw.println("    <Key>Sender</Key>");
    pw.println("    <Value>Debugger</Value>");
    pw.println("  </Item>");
    pw.println("  <Item>");
    pw.println("    <Key>Vote</Key>");
    pw.println("    <Value>" + vote + "</Value>");
    pw.println("  </Item>");
    pw.println("  <Item>");
    pw.println("    <Key>Email</Key>");
    pw.println("    <Value>" + email +"</Value>");
    pw.println("  </Item>");
    pw.println("</Msg>");

    pw.close();
  }

  public ArrayList<String> parseFile(String filename) {
    ArrayList<String> lines = new ArrayList<String>();

    try {
      Scanner sc = new Scanner(new File(filename));

      while (sc.hasNext()) {
        lines.add(sc.next());
      }

      sc.close();
    } catch (FileNotFoundException e) {

    }

    return(lines);
  }

  public void votePreview(ArrayList<String> lines) {
    
  }

  private class thehandler implements ActionListener {
    public void actionPerformed(ActionEvent event) {
      String string1 = "";
      String string2 = "";
      String string3 = "";

      if(event.getSource() == item1 || event.getSource() == item2 || event.getSource() == item3) {
        try {
          createVote(item1.getText(), item2.getText(), item3.getText());
          voteLines = new ArrayList<String>(parseFile(item3.getText()));
          votePreview(voteLines);
          System.out.println("Create file: " + item3.getText());
        } catch (IOException e) {
          System.out.println("File not created.");
        }
      }
    }
  }


}
